# Generated by Django 5.2.4 on 2025-09-05 16:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=20)),
                ('calories', models.PositiveIntegerField()),
                ('protein', models.FloatField(help_text='Protein in grams')),
                ('carbs', models.FloatField(help_text='Carbs in grams')),
                ('fats', models.FloatField(help_text='Fats in grams')),
                ('fiber', models.FloatField(default=0, help_text='Fiber in grams')),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('is_gluten_free', models.BooleanField(default=False)),
                ('is_dairy_free', models.BooleanField(default=False)),
                ('preparation_time', models.PositiveIntegerField(blank=True, help_text='Preparation time in minutes', null=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='meal_images/')),
            ],
            options={
                'verbose_name': 'Meal',
                'verbose_name_plural': 'Meals',
                'ordering': ['meal_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserMealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('consumed_at', models.TimeField()),
                ('servings', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('satisfaction', models.PositiveSmallIntegerField(blank=True, help_text='Rating from 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.meal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meal Log',
                'verbose_name_plural': 'Meal Logs',
                'ordering': ['-date', '-consumed_at'],
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('clothes', 'Clothes'), ('shoes', 'Shoes'), ('bags', 'Bags'), ('electronics', 'Electronics'), ('fitness', 'Fitness Equipment'), ('supplements', 'Supplements'), ('books', 'Books')], max_length=20)),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=2)),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('url', models.URLField(blank=True, help_text='Link to product page', max_length=500)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('is_purchased', models.BooleanField(default=False)),
                ('purchased_on', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wishlist Item',
                'verbose_name_plural': 'Wishlist Items',
                'ordering': ['-priority', '-added_on'],
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('duration', models.DurationField(help_text='Duration in HH:MM:SS')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('calories_burned', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', 'name'],
                'unique_together': {('user', 'name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField(editable=False)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('height', models.DecimalField(decimal_places=2, help_text='Height in cm or inches', max_digits=5)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kg or lbs', max_digits=5)),
                ('unit_system', models.CharField(choices=[('imperial', 'Imperial (lbs/in)'), ('metric', 'Metric (kg/cm)')], default='metric', max_length=10)),
                ('goal', models.CharField(help_text='e.g., Lose weight, Gain muscle', max_length=100)),
                ('target_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dietary_preferences', models.CharField(blank=True, choices=[('meat', 'Meat'), ('meat_veg', 'Meat & Veg'), ('veg', 'Vegetarian'), ('vegan', 'Vegan'), ('keto', 'Keto'), ('paleo', 'Paleo')], max_length=20)),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary'), ('light', 'Lightly Active'), ('moderate', 'Moderately Active'), ('active', 'Very Active'), ('extreme', 'Extremely Active')], default='moderate', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('source', models.CharField(choices=[('social', 'Social Media'), ('friend', 'Friend or Family'), ('google', 'Google Search'), ('ads', 'Ads'), ('other', 'Other')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('workouts', models.ManyToManyField(blank=True, related_name='users', to='app.workout')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kg or lbs', max_digits=5)),
                ('body_fat_percentage', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('muscle_mass', models.DecimalField(blank=True, decimal_places=2, help_text='Muscle mass in kg or lbs', max_digits=5, null=True)),
                ('waist_circumference', models.DecimalField(blank=True, decimal_places=2, help_text='Waist circumference in cm or inches', max_digits=5, null=True)),
                ('hip_circumference', models.DecimalField(blank=True, decimal_places=2, help_text='Hip circumference in cm or inches', max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('front_image', models.ImageField(blank=True, null=True, upload_to='progress_images/')),
                ('side_image', models.ImageField(blank=True, null=True, upload_to='progress_images/')),
                ('back_image', models.ImageField(blank=True, null=True, upload_to='progress_images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progress Entry',
                'verbose_name_plural': 'Progress Entries',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('satisfaction', models.PositiveSmallIntegerField(blank=True, help_text='Rating from 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('calories_burned', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_logs', to=settings.AUTH_USER_MODEL)),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.workout')),
            ],
            options={
                'verbose_name': 'Workout Log',
                'verbose_name_plural': 'Workout Logs',
                'ordering': ['-date', '-start_time'],
                'unique_together': {('user', 'workout', 'date')},
            },
        ),
    ]
